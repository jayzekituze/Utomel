local osclock = os.clock()
repeat task.wait() until game:IsLoaded()

print("waiting 20s")
wait(20)

--// loadstring(game:HttpGet('https://raw.githubusercontent.com/jayzekituze/Utomel/main/PaidScript'))() -- LIB
--// loadstring(game:HttpGet('https://raw.githubusercontent.com/jayzekituze/Utomel/main/autoRecon'))() -- auto recon
setfpscap(10)
local Players = game:GetService('Players')
local Player = Players.LocalPlayer
local getPlayers = Players:GetPlayers()
local PlayerInServer = #getPlayers
local http = game:GetService("HttpService")
local ts = game:GetService("TeleportService")
local rs = game:GetService("ReplicatedStorage")

local vu = game:GetService("VirtualUser")
Players.LocalPlayer.Idled:connect(function()
	vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	task.wait(1)
	vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.Core["Idle Tracking"].Disabled = true

local function jumpToServer()
	local sfUrl = "https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=%s&limit=%s&excludeFullGames=true" 
	local req = request({ Url = string.format(sfUrl, 8737899170, "Desc", 100) }) 
	local body = http:JSONDecode(req.Body) 
	local deep = math.random(1, 2)
	if deep > 1 then
        	for i = 1, deep, 1 do 
             	req = request({ Url = string.format(sfUrl .. "&cursor=" .. body.nextPageCursor, 8737899170, "Desc", 100) }) 
             	body = http:JSONDecode(req.Body) 
            	task.wait(0.1)
        	end
	end

    local servers = {}
    if body and body.data then
        for i, v in next, body.data do
        	if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing > 2 and v.id ~= game.JobId then
                table.insert(servers, v.id)
        	end
        end
    end

	
    local randomCount = #servers
    if not randomCount then
		randomCount = 2
    end
    ts:TeleportToPlaceInstance(8737899170, servers[math.random(1, randomCount)], game:GetService("Players").LocalPlayer) 
end

jumpToServer()
