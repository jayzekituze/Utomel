local osclock = os.clock()
repeat task.wait() until game:IsLoaded()

wait(20)


setfpscap(10)
local Players = game:GetService('Players')
local Player = Players.LocalPlayer
local getPlayers = Players:GetPlayers()
local PlayerInServer = #getPlayers
local http = game:GetService("HttpService")
local ts = game:GetService("TeleportService")
local rs = game:GetService("ReplicatedStorage")

local vu = game:GetService("VirtualUser")
Players.LocalPlayer.Idled:connect(function()
	vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	task.wait(1)
	vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.Core["Idle Tracking"].Disabled = true

local function jumpToServer(id)
	repeat
		local deep
		local sfUrl = "https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=%s&limit=%s" 
		local req = request({ Url = string.format(sfUrl, id, "Desc", 100) }) 
		local body = http:JSONDecode(req.Body)
		if id == 8737899170 then
			local deep = math.random(1, 4)
		else
			local deep = 1
		end
		if deep > 1 then
	        for i = 1, deep, 1 do 
	         	req = request({ Url = string.format(sfUrl .. "&cursor=" .. body.nextPageCursor, id, "Desc", 100) }) 
	         	body = http:JSONDecode(req.Body) 
	        	task.wait(0.1)
	        end
		end
	
	    local servers = {}
	    if body and body.data then
	        for i, v in next, body.data do
	    	    if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing > 35 and v.id ~= game.JobId then
	            	table.insert(servers, v.id)
	        	end
	        end
	    end
	
	    local randomCount = #servers
	    if not randomCount then
			randomCount = 2
	    end
    	ts:TeleportToPlaceInstance(id, servers[math.random(1, randomCount)], game:GetService("Players").LocalPlayer)
	until game.JobId ~= game.JobId
end



print("HuGe Games STARTING")

wait(5)
getgenv().AuthKey = "HUGE_HYARsu18jErU"
getgenv().LoadSettings = {
    Example_Setting = 2
}
loadstring(game:HttpGet("https://HugeGames.io/ps99"))()

task.spawn(function()
	game:GetService("GuiService").ErrorMessageChanged:Connect(function()
		game.Players.LocalPlayer:Kick("Found An Error, Reconnecting...")
		print("Found An Error, Reonnecting...")
		wait(0.1)
		jumpToServer()
	end);
end)


local hopDelay = math.random(500000, 500000)

while task.wait(1) do
	if math.floor(os.clock() - osclock) >= hopDelay then
		while task.wait(1) do
			print("HAHAHHA NO SERVER HOP")
		end
	end
end
